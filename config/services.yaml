# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    #env(STORAGE_FOLDER): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #You can defined here some extra elasticms storage services. See examples below.
    #Be aware that you can more easily activate predefined elasticms storage service via the environment variables
    #EMS\CoreBundle\Service\Storage\FileSystemStorage:
    #    arguments: ['%env(string:STORAGE_FOLDER)%']
    #    tags:
    #    -  { name: ems.storage }
    #EMS\CoreBundle\Service\Storage\EntityStorage:
    #    arguments: ['@doctrine', false]
    #    tags:
    #    -  { name: ems.storage }
    #EMS\CoreBundle\Service\Storage\HttpStorage:
    #    arguments: ['@ems.service.rest_client', 'https://demo.elasticms.eu/data/file/view/', 'https://demo.elasticms.eu/api/file', 'auth_key_gUGGYvhuqUoppYQ3JM11xxHTb1J0TPFwWi7SuP7NBdJqjoo']
    #    tags:
    #    -  { name: ems.storage }
    #EMS\CoreBundle\Service\Storage\SftpStorage:
    #    arguments: ['demo.elasticms.eu', '/opt/sftp_test', 'user', '/home/user/.ssh/id_rsa.pub', '/home/user/.ssh/id_rsa']
    #    tags:
    #    -  { name: ems.storage }

    app.ems.cache:
        class: EMS\CommonBundle\Storage\Adapter\FileAdapter
        arguments: ['%env(string:STORAGE_FOLDER)%/cache']
        tags:
            - { name: ems_common.storage.cache_adapter }
    app.ems.filesystem:
        class: EMS\CommonBundle\Storage\Adapter\FileAdapter
        arguments: ['%env(string:STORAGE_FOLDER)%']
        tags:
            - { name: ems_common.storage.adapter }